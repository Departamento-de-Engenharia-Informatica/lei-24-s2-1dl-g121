@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

'hide footbox
actor "Human Resources Manager" as ADM
participant ":CreateJobUI" as UI
participant ":CreateJobController" as CTRL
participant "Repositories" as RepositorySingleton
participant "repositories\n:Repositories" as PLAT
participant "jobRepository:\nJobRepository" as JobRepository
'participant ":ApplicationSession" as _APP
'participant "appSession\n:ApplicationSession" as APP
'participant "currentSession\n:UserSession" as SESSAO
'participant "organizationRepository:\nOrganizationRepository" as OrganizationRepository
participant "organization\n:Organization" as ORG
participant "job\n:Job" as TAREFA

activate ADM

        ADM -> UI : asks to register a new job

        activate UI

'            UI --> ADM : requests data (reference, description,  informal \n description, technical description, duration, cost)
            'create CTRL
            UI -> CTRL** : create

            UI -> CTRL : getJob()
            activate CTRL

                CTRL -> RepositorySingleton : getInstance()
                activate RepositorySingleton

                    RepositorySingleton --> CTRL: repositories
                deactivate RepositorySingleton

                CTRL -> PLAT : getJobRepository()
                activate PLAT

                    PLAT --> CTRL: jobRepository
                deactivate PLAT

             '   CTRL -> TaskCategoryRepository : getJob()
              '  activate JobRepository

               '     TaskCategoryRepository --> CTRL : jobList
                'deactivate JobRepository

             '   CTRL --> UI : taskCategoryList
            'deactivate CTRL

'            UI --> ADM : shows task category list\n and asks to sleect one
'        deactivate UI
'
'    ADM -> UI : selects a task category
'    activate UI

        UI --> ADM : requests data
    deactivate UI

    ADM -> UI : types requested data (Job name, set of skills needed)
    activate UI

        UI --> ADM : shows requested data
    deactivate UI

    ADM -> UI : submits data
    activate UI

        UI -> CTRL : createJob(Job name, set of skills needed)
        activate CTRL

'            CTRL -> CTRL : getTaskCategoryByDescription(taskCategoryDescription)
'            activate CTRL

'                CTRL -> RepositorySingleton : getInstance()
'                activate RepositorySingleton
'
'                    RepositorySingleton --> CTRL: repositories
'                deactivate RepositorySingleton
'
'                CTRL -> PLAT : getTaskCategoryRepository()
'                activate PLAT
'
'                    PLAT -> CTRL : taskCategoryRepository
'                deactivate PLAT
'
'                CTRL -> TaskCategoryRepository : getTaskCategoryByDescription(taskCategoryDescription)
'                activate TaskCategoryRepository
'
'                    TaskCategoryRepository --> CTRL : taskCategory
'                deactivate TaskCategoryRepository
'                    CTRL --> CTRL : taskCategory
'            deactivate CTRL

            |||
            CTRL -> CTRL : getEmployeeFromSession()
            activate CTRL

                CTRL -> _APP: getInstance()
                activate _APP
                    _APP -> CTRL: appSession
                deactivate _APP


                CTRL -> APP: getCurrentSession()
                activate APP

                    APP --> CTRL: currentSession
                deactivate APP

                'CTRL -> SESSAO: email = getUserEmail()
                'activate SESSAO

                 '   SESSAO --> CTRL: email
                'deactivate SESSAO


                CTRL -> PLAT: getOrganizationRepository(email)
                activate PLAT

                    PLAT --> CTRL: organizationRepository
                deactivate PLAT


                CTRL -> OrganizationRepository: getOrganizationByEmployeeEmail(email)
                activate OrganizationRepository

                    loop [for each organization
                        OrganizationRepository -> ORG : anyEmployeeHasEmail(email)
                        activate ORG

                             ORG --> OrganizationRepository : true/false
                        deactivate ORG
                    end
                    OrganizationRepository --> CTRL : organization
                deactivate OrganizationRepository

                CTRL -> ORG: getEmployeeByEmail(email)
                activate ORG

                    ORG --> CTRL : employee
                deactivate ORG

                CTRL --> CTRL : employee
            deactivate CTRL

            |||
            CTRL -> ORG: createJob(Job name, set of skills needed)
            activate ORG

                ORG -> TAREFA**: create(Job name, set of skills needed)
                ORG -> ORG: addJob (job)


                activate ORG
                    ORG -> ORG: validateJob(job)
'                    activate ORG
'                        ORG --> ORG
'                    deactivate ORG
'
'                    ORG --> ORG
'                deactivate ORG

                ORG --> CTRL : job

            deactivate ORG

            CTRL --> UI: job
            deactivate CTRL
            UI --> ADM: displays operation success
    deactivate UI

deactivate ADM

@enduml