@startuml
'skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false
skinparam linetype polyline

'class Employee {
'    - name: String
'    - email: String
'    - position: String
'    - phone: String
'}

class Job {
    - reference: String
    - description: String
    - informalDescription: String
    - technicalDescription: String
    - duration: Integer
    - cost: Double
    + Job(reference: String, description: String, informalDescription: String, technicalDescription: String, duration: Integer, cost: Double)
}

'class JobCategory {
'    - description: String
'    + JobCategory(description: String)
'}

class Organization {
    - name: String
    - vatNumber: String
    - website: String
    - phone: String
    - email: String
    + Organization(name: String, vatNumber: String, website: String, phone: String, email: String)
    - addJob(Job: Job)
    - validateJob(Job: Job)
    + anyEmployeeHasEmail(email: String)
    - getEmployeeByEmail(email: String)
}

class JobRepository {
    
}

class OrganizationRepository {
    + getOrganizationByEmployeeEmail(email: String)
}

class Repositories {
    - Repositories()
    + getInstance(): Repositories
    + getJobRepository(): JobRepository
    + getOrganizationRepository(): OrganizationRepository
}

class CreateJobController {
    + CreateJobController(organizationRepository: OrganizationRepository, JobRepository: JobRepository)
    + getJobCategories()
    + createJob(userEmail: String, reference: String, description: String, informalDescription: String, technicalDescription: String, duration: Integer, cost: Double, categoryDescription: String)
    - getJobCategoryByDescription(JobCategoryDescription: String)
    - getEmployeeFromSession()
}

note right of CreateJobController
    - userEmail is obtained from the user session
    - categoryDescription is retrieved from selected data
end note

note bottom of JobRepository
    - used for displaying the already existing jobs
end note

class CreateJobUI {
}

Repositories -> Repositories : instance
CreateJobUI .> CreateJobController
CreateJobController .> Repositories : repositories
Repositories -> "1" JobRepository
CreateJobController ..> JobCategory
CreateJobController ..> OrganizationRepository : organizationRepository
CreateJobController ..> JobRepository : JobRepository
Repositories --> "1" OrganizationRepository
OrganizationRepository --> "*" Organization
CreateJobController --> "1" Organization : organization
Job "*" --> "1" JobCategory : JobCategory
JobRepository "1" --> "*" JobCategory : JobCategory
Organization "1" --> "*" Job : Jobs
Job --> HRM : createdBy
Organization --> "*" Collaborator : employs
@enduml
